# U-Net Ship Segmentation with Encoder Freezing Configuration

model:
  encoder: efficientnet-b3  # Pretrained encoder
  encoder_weights: imagenet  # Use ImageNet pretrained weights
  
  # Freezing configuration
  freeze_encoder: true  # Whether to freeze encoder initially
  freeze_strategy: full  # Options: full, partial, gradual, none
  unfreeze_epoch: 5  # Epoch to unfreeze (for 'full' strategy)
  freeze_bn: true  # Keep BatchNorm layers frozen even after unfreezing
  
  # Alternative strategies explained:
  # - none: No freezing, train everything from start (original behavior)
  # - full: Freeze entire encoder, unfreeze at specified epoch
  # - partial: Freeze only early layers (first 75% of encoder)
  # - gradual: Start frozen, unfreeze layer by layer during training

loss:
  dice_weight: 0.7
  bce_weight: 0.3

training:
  batch_size: 16
  max_epochs: 10
  early_stopping_patience: 7
  precision: 16  # Mixed precision

optimizer:
  name: adamw
  lr: 1e-3  # Learning rate for decoder
  encoder_lr_scale: 0.1  # Encoder LR = lr * encoder_lr_scale (when unfrozen)
  weight_decay: 0.01
  
  # With encoder_lr_scale=0.1:
  # - Decoder learning rate: 1e-3
  # - Encoder learning rate: 1e-4 (when unfrozen)

scheduler:
  name: cosine
  T_max: 40
  eta_min: 1e-6

augmentation:
  strong_aug: true
  color_aug: true
  noise_aug: true

data:
  val_split: 0.2
  num_workers: 4
  random_seed: 42